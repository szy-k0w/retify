{"version":3,"sources":["services/SpotifyAPI/helpers/createAuthHeader.js","services/SpotifyAPI/SpotifyAPI.js","services/SpotifyAuth/config/spotifyCredentials.js","services/SpotifyAuth/createAuthUrl.js","helpers/getHashParams.js","services/SpotifyAuth/helpers/validateCallbackParams.js","services/SpotifyAuth/index.js","services/SpotifyAuth/config/rootAuthUrl.js","services/SpotifyAuth/getAuth.js","services/SpotifyAuth/logOut.js","services/SpotifyAuth/handleAuthResponse.js","components/App/AuthContainer/Auth/Auth.jsx","components/App/AuthContainer/AuthContainer.jsx","components/shared/LoadingSpinner/LoadingSpinner.jsx","components/App/CallbackContainer/Callback/Callback.jsx","components/App/CallbackContainer/CallbackContainer.jsx","components/hoc/withAuthValidation.js","components/providers/WebPlaybackContext/web-playback-context.js","components/providers/WebPlaybackContext/WebPlaybackProvider.jsx","components/shared/SubpageContent/SubpageContent.jsx","services/SpotifyAPI/AlbumAPI.js","components/shared/ItemsSet/Content/SetStatus/ErrorCard/ErrorCard.jsx","components/shared/ItemsSet/Content/SetStatus/SetStatus.jsx","components/shared/ItemsSet/Content/Content.jsx","components/shared/ItemsSet/Header/Header.jsx","hooks/useInifiniteScroll.js","components/shared/ItemsSet/ItemsSet.jsx","components/shared/Cover/Cover.jsx","services/SpotifyAPI/PlayerAPI.js","components/shared/TrackItem/TrackControl/TrackControl.jsx","components/shared/ArtistLinksList/ArtistLinksList.jsx","components/shared/TrackItem/TrackDescription/TrackDescription.jsx","helpers/mapMsToDisplayForm.js","components/shared/TrackItem/TrackDuration/TrackDuration.jsx","helpers/getFirstImgSrc.js","components/providers/WebPlaybackContext/withWebPlayback.jsx","components/shared/TrackItem/TrackItem.jsx","components/App/ClientContainer/Client/pages/Album/TracksContainer/Tracks/Tracks.jsx","components/hoc/withIdParameter.js","components/App/ClientContainer/Client/pages/Album/TracksContainer/TracksContainer.jsx","components/shared/MediaHeader/Type/Type.jsx","components/shared/MediaHeader/Title/Title.jsx","components/shared/MediaHeader/Detail/Detail.jsx","components/shared/MediaHeader/MediaHeader.jsx","components/App/ClientContainer/Client/pages/Album/HeaderContainer/Header/Header.jsx","components/App/ClientContainer/Client/pages/Album/HeaderContainer/HeaderContainer.jsx","components/App/ClientContainer/Client/pages/Album/Album.jsx","services/SpotifyAPI/ArtistAPI.js","components/App/ClientContainer/Client/pages/Artist/HeaderContainer/Header.jsx","components/App/ClientContainer/Client/pages/Artist/HeaderContainer/HeaderContainer.jsx","components/shared/Navigation/Link/Link.jsx","components/shared/Navigation/Navigation.jsx","components/shared/MediaCard/Header/Header.jsx","components/shared/MediaCard/Content/Content.jsx","components/shared/MediaCard/Title/Title.jsx","components/shared/MediaCard/Type/Type.jsx","components/shared/MediaCard/Description/Description.jsx","components/shared/MediaCard/MediaCard.jsx","components/shared/ArtistCardContainer/ArtistCard.jsx","components/shared/ArtistCardContainer/ArtistCardContainer.jsx","components/shared/InfiniteArtistsSet/InfiniteArtistsSet.jsx","components/App/ClientContainer/Client/pages/Artist/HeaderContainer/RelatedArtists.jsx","components/shared/AlbumCardContainer/AlbumCard/AlbumCard.jsx","components/shared/AlbumCardContainer/AlbumCardContainer.jsx","components/shared/InfiniteAlbumsSet/InfiniteAlbumsSet.jsx","components/App/ClientContainer/Client/pages/Artist/Review.jsx","components/App/ClientContainer/Client/pages/Artist/Artist.jsx","components/App/ClientContainer/Client/ClientHeader/ClientHeader.jsx","components/App/ClientContainer/Client/ClientSidebar/ClientSidebar.jsx","components/App/ClientContainer/Client/pages/HomeContainer/Home/Home.jsx","services/SpotifyAPI/PersonalizationAPI.js","components/App/ClientContainer/Client/pages/HomeContainer/HomeContainer.jsx","services/SpotifyAPI/LibraryAPI.js","components/App/ClientContainer/Client/pages/LibraryContainer/Library/Library.jsx","services/SpotifyAPI/FollowAPI.js","components/App/ClientContainer/Client/pages/LibraryContainer/LibraryContainer.jsx","components/App/ClientContainer/Client/PlayerContainer/Player/MusicControlContainer/MusicControl/MusicControl.jsx","components/App/ClientContainer/Client/PlayerContainer/Player/MusicControlContainer/MusicControlContainer.jsx","components/App/ClientContainer/Client/PlayerContainer/Player/TrackInfo/TrackInfo.jsx","components/App/ClientContainer/Client/PlayerContainer/Player/Player.jsx","components/App/ClientContainer/Client/PlayerContainer/PlayerContainer.jsx","components/App/ClientContainer/Client/Client.jsx","components/App/ClientContainer/ClientContainer.jsx","components/App/App.jsx","index.js"],"names":["createAuthHeader","SpotifyAuth","getAuth","accessToken","tokenType","SpotifyAPI","Axios","create","baseURL","interceptors","request","use","config","headers","Authorization","spotifyCredentials","client_id","redirect_url","response_type","scope","join","getHashParams","hashParams","r","q","window","location","hash","substring","e","exec","decodeURIComponent","validateCallbackParams","params","access_token","token_type","expires_in","createAuthUrl","localStorage","getItem","expiresIn","logOut","clear","handleAuthResponse","setItem","Auth","handleAuth","className","onClick","defaultProps","AuthContainer","props","href","LoadingSpinner","icon","faSpinner","spin","Callback","withRouter","history","useEffect","push","withAuthValidation","Base","WrappedComponent","to","displayName","WebPlaybackContext","createContext","isReady","isPlaying","currentTrack","contextUri","duration","WebPlaybackProvider","children","useState","setIsReady","setIsPlaying","setCurrentTrack","setContextUri","position","setPosition","setDuration","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","callback","a","connect","console","log","addListener","device_id","state","context","paused","track_window","uri","current_track","contextValue","Provider","value","SubpageContent","AlbumAPI","getAlbum","id","method","url","data","getTracks","offset","ErrorCard","message","status","SetStatus","isLoading","error","setStatusClasses","cx","isAxiosError","response","renderContent","Content","variant","useContext","ItemsSetContext","items","itemRef","contentClasses","Fragment","Header","moreUrl","useInifiniteScroll","hasMore","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","ItemsSet","handleFetch","setItems","setHasMore","setIsLoading","setError","fetchParams","length","lastItem","handleEnhancedFetch","currentItems","newHasMore","Cover","src","alt","getDevices","then","res","seek","position_ms","getRecentlyPlayedTracks","limit","postPlayNext","PlayerAPI","postPlayPrevious","putPlayByContext","context_uri","putPlayByUri","uris","putPlayDefault","putPause","TrackControl","handleAction","isActive","trackControlClasses","faPauseCircle","faPlayCircle","ArtistLinksList","artists","map","index","key","style","color","textDecoration","TrackDescription","title","trackItemClasses","mapMsToDisplayForm","duration_ms","date","Date","minutes","getUTCMinutes","seconds","getUTCSeconds","TrackDuration","getFirstImgSrc","images","withWebPlayback","webPlaybackValue","TrackItem","React","forwardRef","ref","track","album","coverSrc","handleTrackAction","Tracks","fetchTracks","fetchTrack","withIdParameter","useParams","next","Boolean","Type","Title","Detail","MediaHeader","mediaHeaderClasses","type","release_date","coverUrl","faCalendar","setAlbum","Album","require","default","ArtistAPI","getArtist","getTopTracks","country","getAlbums","includeGroups","include_groups","getRealatedArtists","artist","followers","faHeart","total","setArtist","Link","Navigation","direction","navigationClasses","navigation","cardTitleCasses","Description","MediaCard","titleUrl","ArtistCard","artistRef","ArtistCardContainer","isArtistPlaying","InfiniteArtistsSet","fetchArtists","renderArtistsCardsGrid","RelatedArtists","fetchRelatedArtists","AlbumCard","albumRef","isAlbumPlaying","InfiniteAlbumsSet","fetchAlbums","renderAlbumCardsGrid","albums","Review","fetchTopTrack","tracks","renderTracksList","path","ClientSidebar","Home","fetchRecentlyPlayed","fetchTopArtists","PersonalizationAPI","getTopArtists","HomeContainer","fetchedItems","pagingTrack","LibraryAPI","getSavedAlbums","Library","fetchFollowedArtists","fetchSavedAlbums","FollowAPI","getFollowedArtists","after","LibraryContainer","MusicControl","handlePlayPrevious","handleSeek","handlePlayNext","faStepBackward","faStepForward","onDragEnd","step","min","max","currentPosition","setCurrentPosition","newPosition","target","interval","setInterval","clearInterval","TrackInfo","playerClasses","Client","component","Artist","App","CallbackContainer","ClientContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.294ce64f.chunk.js","sourcesContent":["import SpotifyAuth from \"services/SpotifyAuth\";\r\n\r\nexport const createAuthHeader = () => {\r\n\tconst { accessToken, tokenType } = SpotifyAuth.getAuth();\r\n\r\n\treturn `${tokenType} ${accessToken}`;\r\n};\r\n","import Axios from \"axios\";\r\nimport { createAuthHeader } from \"./helpers/createAuthHeader\";\r\n\r\nconst SpotifyAPI = Axios.create({\r\n\tbaseURL: \"https://api.spotify.com\",\r\n});\r\n\r\nSpotifyAPI.interceptors.request.use((config) => {\r\n\tconfig.headers = {\r\n\t\tAuthorization: createAuthHeader(),\r\n\t};\r\n\treturn config;\r\n});\r\n\r\nexport default SpotifyAPI;\r\n","const spotifyCredentials = {\r\n\tclient_id: \"1bb9eb7f824b458bbb58657dbc1877ba\",\r\n\tredirect_url: \"http://localhost:3000/callback\",\r\n\tresponse_type: \"token\",\r\n\tscope: [\r\n\t\t\"user-read-playback-state\",\r\n\t\t\"user-modify-playback-state\",\r\n\t\t\"streaming\",\r\n\t].join(\",\"),\r\n};\r\n\r\nexport default spotifyCredentials;\r\n\r\n// Images\r\n// ugc-image-upload\r\n// Spotify Connect\r\n// user-read-playback-state\r\n// user-modify-playback-state\r\n// user-read-currently-playing\r\n// Playback\r\n// streaming\r\n// app-remote-control\r\n// Users\r\n// user-read-email\r\n// user-read-private\r\n// Playlists\r\n// playlist-read-collaborative\r\n// playlist-modify-public\r\n// playlist-read-private\r\n// playlist-modify-private\r\n// Library\r\n// user-library-modify\r\n// user-library-read\r\n// Listening History\r\n// user-top-read\r\n// user-read-playback-position\r\n// user-read-recently-played\r\n// Follow\r\n// user-follow-read\r\n// user-follow-modify\r\n","import spotifyCredentials from \"./config/spotifyCredentials\";\r\nimport rootAuthUrl from \"./config/rootAuthUrl\";\r\n\r\nconst { client_id, redirect_url, response_type, scope } = spotifyCredentials;\r\n\r\nconst createAuthUrl = () => {\r\n\treturn `${rootAuthUrl}?client_id=${client_id}&redirect_uri=${redirect_url}&response_type=${response_type}&scope=${scope}`;\r\n};\r\n\r\nexport default createAuthUrl;\r\n","const getHashParams = () => {\r\n\tconst hashParams = {};\r\n\tconst r = /([^&;=]+)=?([^&;]*)/g;\r\n\tconst q = window.location.hash.substring(1);\r\n\tlet e = r.exec(q);\r\n\twhile (e) {\r\n\t\thashParams[e[1]] = decodeURIComponent(e[2]);\r\n\t\te = r.exec(q);\r\n\t}\r\n\r\n\treturn hashParams;\r\n};\r\n\r\nexport default getHashParams;\r\n","const validateCallbackParams = (params) => {\r\n\tconst { access_token, token_type, expires_in } = params;\r\n\r\n\tif (access_token && token_type && expires_in) return true;\r\n\treturn false;\r\n};\r\n\r\nexport default validateCallbackParams;\r\n","import createAuthUrl from \"./createAuthUrl\";\r\nimport handleAuthResponse from \"./handleAuthResponse\";\r\nimport logOut from \"./logOut\";\r\nimport getAuth from \"./getAuth\";\r\n\r\nconst SpotifyAuth = {\r\n\tcreateAuthUrl,\r\n\tgetAuth,\r\n\tlogOut,\r\n\thandleAuthResponse,\r\n};\r\n\r\nexport default SpotifyAuth;\r\n","const rootAuthUrl = \"https://accounts.spotify.com/authorize\";\r\n\r\nexport default rootAuthUrl;\r\n","const getAuth = () => {\r\n\tconst auth = {\r\n\t\taccessToken: window.localStorage.getItem(\"accessToken\"),\r\n\t\ttokenType: window.localStorage.getItem(\"tokenType\"),\r\n\t\texpiresIn: window.localStorage.getItem(\"expiresIn\"),\r\n\t};\r\n\r\n\treturn auth;\r\n};\r\n\r\nexport default getAuth;\r\n","const logOut = () => {\r\n\twindow.localStorage.clear();\r\n};\r\n\r\nexport default logOut;\r\n","import getHashParams from \"helpers/getHashParams\";\r\nimport validateCallbackParams from \"./helpers/validateCallbackParams\";\r\n\r\nconst handleAuthResponse = () => {\r\n\tconst params = getHashParams();\r\n\r\n\tif (validateCallbackParams(params)) {\r\n\t\tconst { access_token, token_type, expires_in } = params;\r\n\r\n\t\twindow.localStorage.setItem(\"accessToken\", access_token);\r\n\t\twindow.localStorage.setItem(\"tokenType\", token_type);\r\n\t\twindow.localStorage.setItem(\"expiresIn\", expires_in);\r\n\t}\r\n};\r\n\r\nexport default handleAuthResponse;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Auth.sass\";\r\n\r\nconst Auth = ({ handleAuth }) => {\r\n\treturn (\r\n\t\t<div className=\"auth\">\r\n\t\t\t<article className=\"auth-card\">\r\n\t\t\t\t<h1 className=\"auth-card__title\">Log In with Spotify</h1>\r\n\t\t\t\t<button className=\"auth-card__btn\" onClick={handleAuth}>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t</article>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nAuth.defaultProps = {\r\n\thandleAuth: () => {},\r\n};\r\n\r\nAuth.propTypes = {\r\n\thandleAuth: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\n\r\nimport SpotifyAuth from \"services/SpotifyAuth\";\r\n\r\nimport Auth from \"./Auth\";\r\n\r\nconst AuthContainer = (props) => {\r\n\tconst handleAuth = () => {\r\n\t\twindow.location.href = SpotifyAuth.createAuthUrl();\r\n\t};\r\n\r\n\treturn <Auth handleAuth={handleAuth} />;\r\n};\r\n\r\nAuthContainer.propTypes = {};\r\n\r\nexport default AuthContainer;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./LoadingSpinner.sass\";\r\n\r\nconst LoadingSpinner = () => {\r\n\treturn <FontAwesomeIcon className=\"loading-spinner\" icon={faSpinner} spin />;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\n\r\nimport LoadingSpinner from \"components/shared/LoadingSpinner\";\r\n\r\nimport \"./Callback.sass\";\r\n\r\nconst Callback = () => {\r\n\treturn (\r\n\t\t<div className=\"callback\">\r\n\t\t\t<LoadingSpinner />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Callback;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nimport SpotifyAuth from \"services/SpotifyAuth\";\r\n\r\nimport Callback from \"./Callback\";\r\n\r\nconst CallbackContainer = ({ history }) => {\r\n\tuseEffect(() => {\r\n\t\tSpotifyAuth.handleAuthResponse();\r\n\t\tconst auth = SpotifyAuth.getAuth();\r\n\r\n\t\tif (auth.accessToken) {\r\n\t\t\thistory.push(\"/client\");\r\n\t\t} else {\r\n\t\t\thistory.push(\"/auth\");\r\n\t\t}\r\n\t}, [history]);\r\n\r\n\treturn <Callback />;\r\n};\r\n\r\nCallbackContainer.propTypes = {\r\n\thistory: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(CallbackContainer);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport SpotifyAuth from \"services/SpotifyAuth\";\r\n\r\nconst withAuthValidation = (Base) => {\r\n\tconst WrappedComponent = (props) => {\r\n\t\tconst auth = SpotifyAuth.getAuth();\r\n\r\n\t\tif (!auth.accessToken) return <Redirect to=\"/auth\" />;\r\n\r\n\t\treturn <Base {...props} />;\r\n\t};\r\n\r\n\tWrappedComponent.displayName = \"withAuthValidation\";\r\n\r\n\treturn WrappedComponent;\r\n};\r\n\r\nexport default withAuthValidation;\r\n","import { createContext } from \"react\";\r\n\r\nconst initialValue = {\r\n\tisReady: false,\r\n\tisPlaying: false,\r\n\tcurrentTrack: null,\r\n\tcontextUri: null,\r\n\tduration: 0,\r\n};\r\n\r\nconst WebPlaybackContext = createContext(initialValue);\r\n\r\nexport default WebPlaybackContext;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport SpotifyAuth from \"services/SpotifyAuth\";\r\nimport WebPlaybackContext from \"./web-playback-context\";\r\n\r\nconst WebPlaybackProvider = ({ children }) => {\r\n\tconst { accessToken } = SpotifyAuth.getAuth();\r\n\r\n\tconst [isReady, setIsReady] = useState(false);\r\n\tconst [isPlaying, setIsPlaying] = useState(false);\r\n\tconst [currentTrack, setCurrentTrack] = useState(null);\r\n\tconst [contextUri, setContextUri] = useState(null);\r\n\tconst [position, setPosition] = useState(0);\r\n\tconst [duration, setDuration] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!accessToken) return;\r\n\r\n\t\twindow.onSpotifyWebPlaybackSDKReady = () => {\r\n\t\t\tconst player = new window.Spotify.Player({\r\n\t\t\t\tname: \"Retify\",\r\n\t\t\t\tgetOAuthToken: async (callback) => {\r\n\t\t\t\t\tawait callback(accessToken);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t(async () => {\r\n\t\t\t\tconst success = await player.connect();\r\n\t\t\t\tif (!success) {\r\n\t\t\t\t\tconsole.log(\"Failed to connect.\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tplayer.addListener(\"ready\", ({ device_id }) => {\r\n\t\t\t\t\tconsole.log(\"Player is ready\");\r\n\t\t\t\t\twindow.localStorage.setItem(\"deviceId\", device_id);\r\n\t\t\t\t\tsetIsReady(true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tplayer.addListener(\"player_state_changed\", (state) => {\r\n\t\t\t\t\tconst { context, paused, track_window, duration, position } = state;\r\n\t\t\t\t\tconst { uri } = context;\r\n\t\t\t\t\tconst { current_track } = track_window;\r\n\t\t\t\t\tsetIsPlaying(!paused);\r\n\t\t\t\t\tsetCurrentTrack(current_track);\r\n\t\t\t\t\tsetContextUri(uri);\r\n\t\t\t\t\tsetDuration(duration);\r\n\t\t\t\t\tsetPosition(position);\r\n\t\t\t\t});\r\n\t\t\t})();\r\n\t\t};\r\n\t}, [accessToken]);\r\n\r\n\tconst contextValue = {\r\n\t\tisReady,\r\n\t\tisPlaying,\r\n\t\tcurrentTrack,\r\n\t\tcontextUri,\r\n\t\tduration,\r\n\t\tposition,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<WebPlaybackContext.Provider value={contextValue}>\r\n\t\t\t{children}\r\n\t\t</WebPlaybackContext.Provider>\r\n\t);\r\n};\r\n\r\nWebPlaybackProvider.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default WebPlaybackProvider;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./SubpageContent.sass\";\r\n\r\nconst SubpageContent = ({ children }) => {\r\n\treturn <main className=\"subpage-content\">{children}</main>;\r\n};\r\n\r\nSubpageContent.propTypes = {\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default SubpageContent;\r\n","import SpotifyAPI from \"./SpotifyAPI\";\r\n\r\nconst getAlbum = async ({ id }) => {\r\n\tconst { data } = await SpotifyAPI({\r\n\t\tmethod: \"get\",\r\n\t\turl: `/v1/albums/${id}`,\r\n\t});\r\n\treturn data;\r\n};\r\n\r\nconst getTracks = async ({ id, offset = 0 }) => {\r\n\tconst { data } = await SpotifyAPI({\r\n\t\tmethod: \"get\",\r\n\t\turl: `/v1/albums/${id}/tracks`,\r\n\t\tparams: {\r\n\t\t\toffset,\r\n\t\t},\r\n\t});\r\n\treturn data;\r\n};\r\n\r\nconst AlbumAPI = {\r\n\tgetAlbum,\r\n\tgetTracks,\r\n};\r\n\r\nexport default AlbumAPI;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ErrorCard.sass\";\r\n\r\nconst ErrorCard = ({ message, status }) => {\r\n\treturn (\r\n\t\t<div className=\"error-card\">\r\n\t\t\t<h3 className=\"error-card__title\">Error</h3>\r\n\t\t\t{status && <h4 className=\"error-card__status\">Status: {status}</h4>}\r\n\t\t\t<p className=\"error-card__msg\">{message}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nErrorCard.propTypes = {\r\n\tmessage: PropTypes.string.isRequired,\r\n\tstatus: PropTypes.number,\r\n};\r\n\r\nErrorCard.defaultProps = {\r\n\tmessage: \"An error occured\",\r\n};\r\n\r\nexport default ErrorCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\n\r\nimport LoadingSpinner from \"components/shared/LoadingSpinner\";\r\n\r\nimport ErrorCard from \"./ErrorCard\";\r\nimport \"./SetStatus.sass\";\r\n\r\nconst SetStatus = ({ isLoading, error }) => {\r\n\tconst setStatusClasses = cx({\r\n\t\t\"set-status\": true,\r\n\t\t\"set-status--loading\": isLoading,\r\n\t\t\"set-status--hide\": !isLoading && !error,\r\n\t});\r\n\r\n\tconst renderContent = () => {\r\n\t\tif (isLoading) return <LoadingSpinner />;\r\n\r\n\t\tif (error) {\r\n\t\t\tif (error.isAxiosError) {\r\n\t\t\t\tconst { message, status } = error.response.data.error;\r\n\t\t\t\treturn <ErrorCard message={message} status={status} />;\r\n\t\t\t}\r\n\t\t\treturn <ErrorCard message={error.message} />;\r\n\t\t}\r\n\t};\r\n\r\n\treturn <footer className={setStatusClasses}>{renderContent()}</footer>;\r\n};\r\n\r\nSetStatus.propTypes = {\r\n\tisLoading: PropTypes.bool.isRequired,\r\n\terror: PropTypes.shape({\r\n\t\tisAxiosError: PropTypes.bool,\r\n\t\tresponse: PropTypes.shape({\r\n\t\t\tdata: PropTypes.shape({\r\n\t\t\t\terror: PropTypes.shape({\r\n\t\t\t\t\tmessage: PropTypes.string,\r\n\t\t\t\t\tstatus: PropTypes.number,\r\n\t\t\t\t}),\r\n\t\t\t}),\r\n\t\t}),\r\n\t\tmessage: PropTypes.string.isRequired,\r\n\t}),\r\n};\r\n\r\nexport default SetStatus;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\n\r\nimport { ItemsSetContext } from \"../ItemsSet\";\r\nimport SetStatus from \"./SetStatus\";\r\nimport \"./Content.sass\";\r\n\r\nconst Content = ({ children, variant }) => {\r\n\tconst { items, isLoading, error, itemRef } = useContext(ItemsSetContext);\r\n\r\n\tconst contentClasses = cx({\r\n\t\t\"items-set-content\": true,\r\n\t\t\"items-set-content--list\": variant === \"list\",\r\n\t\t\"items-set-content--grid\": variant === \"grid\",\r\n\t});\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<main className={contentClasses}>{children(items, itemRef)}</main>\r\n\t\t\t<SetStatus error={error} isLoading={isLoading} />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nContent.propTypes = {\r\n\tchildren: PropTypes.func.isRequired,\r\n\tvariant: PropTypes.oneOf([\"grid\", \"list\"]).isRequired,\r\n};\r\n\r\nContent.defaultProps = {\r\n\tchildren: () => {},\r\n\tvariant: \"grid\",\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Header.sass\";\r\n\r\nconst Header = ({ children, moreUrl }) => {\r\n\treturn (\r\n\t\t<header className=\"items-set-header\">\r\n\t\t\t<h2 className=\"items-set-header__title\">{children}</h2>\r\n\t\t\t{moreUrl && (\r\n\t\t\t\t<NavLink className=\"items-set-header__more-url\" to={moreUrl}>\r\n\t\t\t\t\tShow more\r\n\t\t\t\t</NavLink>\r\n\t\t\t)}\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n\tmoreUrl: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import { useCallback, useRef } from \"react\";\r\n\r\nconst useInifiniteScroll = (isLoading, hasMore, callback) => {\r\n\tconst observer = useRef();\r\n\r\n\tconst itemRef = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (isLoading) return;\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tif (entries[0].isIntersecting && hasMore) {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) observer.current.observe(node);\r\n\t\t},\r\n\t\t[isLoading, hasMore, callback]\r\n\t);\r\n\r\n\treturn [itemRef];\r\n};\r\n\r\nexport default useInifiniteScroll;\r\n","import React, { createContext, useCallback, useEffect, useState } from \"react\";\r\n\r\nimport Content from \"./Content\";\r\nimport Header from \"./Header\";\r\nimport PropTypes from \"prop-types\";\r\nimport useInifiniteScroll from \"hooks/useInifiniteScroll\";\r\n\r\nconst initialContextValue = {\r\n\titems: [],\r\n\tisLoading: true,\r\n\terror: null,\r\n\titemRef: () => {},\r\n};\r\n\r\nconst ItemsSetContext = createContext(initialContextValue);\r\n\r\nconst ItemsSet = ({ children, handleFetch }) => {\r\n\tconst [items, setItems] = useState([]);\r\n\tconst [hasMore, setHasMore] = useState(true);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst fetchParams = {\r\n\t\toffset: items.length,\r\n\t\tlastItem: items[items.length - 1],\r\n\t};\r\n\r\n\tconst handleEnhancedFetch = useCallback(async () => {\r\n\t\tif (isLoading || error) return;\r\n\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst { items, hasMore } = await handleFetch(fetchParams);\r\n\t\t\tsetItems((currentItems) => [...currentItems, ...items]);\r\n\t\t\tconst newHasMore = items.length !== 0 ? hasMore : false;\r\n\t\t\tsetHasMore(newHasMore);\r\n\t\t\tsetIsLoading(false);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t}, [isLoading, error, handleFetch, fetchParams]);\r\n\r\n\tconst [itemRef] = useInifiniteScroll(isLoading, hasMore, handleEnhancedFetch);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (items.length === 0) handleEnhancedFetch();\r\n\t}, [items.length, handleEnhancedFetch]);\r\n\r\n\tconst contextValue = {\r\n\t\titems,\r\n\t\tisLoading,\r\n\t\terror,\r\n\t\titemRef,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ItemsSetContext.Provider value={contextValue}>\r\n\t\t\t<section className=\"items-set\">{children}</section>\r\n\t\t</ItemsSetContext.Provider>\r\n\t);\r\n};\r\n\r\nItemsSet.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\thandleFetch: PropTypes.func.isRequired,\r\n};\r\n\r\nItemsSet.Header = Header;\r\nItemsSet.Content = Content;\r\n\r\nexport { ItemsSetContext };\r\nexport default ItemsSet;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Cover.sass\";\r\n\r\nconst Cover = ({ src, alt }) => {\r\n\treturn (\r\n\t\t<div className=\"cover\">\r\n\t\t\t<main className=\"cover__content\">\r\n\t\t\t\t<img className=\"cover__img\" src={src} alt={alt} />\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCover.propTypes = {\r\n\tsrc: PropTypes.string,\r\n\talt: PropTypes.string.isRequired,\r\n};\r\n\r\nCover.defaultProps = {\r\n\talt: \"Cover\",\r\n};\r\n\r\nexport default Cover;\r\n","import SpotifyAPI from \"./SpotifyAPI\";\r\n\r\nconst getDevices = async () => {\r\n\treturn await SpotifyAPI({\r\n\t\tmethod: \"get\",\r\n\t\turl: \"/v1/me/player/devices\",\r\n\t}).then((res) => res.data);\r\n};\r\n\r\nconst seek = async ({ position }) => {\r\n\tawait SpotifyAPI({\r\n\t\tmethod: \"put\",\r\n\t\turl: `/v1/me/player/seek`,\r\n\t\tparams: {\r\n\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t\tposition_ms: position,\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst getRecentlyPlayedTracks = async ({ limit = 20 }) => {\r\n\treturn await SpotifyAPI({\r\n\t\tmethod: \"get\",\r\n\t\turl: \"/v1/me/player/recently-played\",\r\n\t\tparams: {\r\n\t\t\tlimit,\r\n\t\t},\r\n\t}).then((res) => res.data);\r\n};\r\n\r\nconst postPlayNext = async () => {\r\n\tawait SpotifyAPI({\r\n\t\tmethod: \"post\",\r\n\t\turl: `/v1/me/player/next`,\r\n\t\tparams: {\r\n\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst postPlayPrevious = async () => {\r\n\tawait SpotifyAPI({\r\n\t\tmethod: \"post\",\r\n\t\turl: `/v1/me/player/previous`,\r\n\t\tparams: {\r\n\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst putPlayByContext = async ({ context_uri }) => {\r\n\ttry {\r\n\t\tawait SpotifyAPI({\r\n\t\t\tmethod: \"put\",\r\n\t\t\turl: \"/v1/me/player/play\",\r\n\t\t\tdata: {\r\n\t\t\t\tcontext_uri,\r\n\t\t\t},\r\n\t\t\tparams: {\r\n\t\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t\t},\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconsole.log(error.response);\r\n\t}\r\n};\r\n\r\nconst putPlayByUri = async ({ uri }) => {\r\n\tconst device_id = window.localStorage.getItem(\"deviceId\");\r\n\tconsole.log(device_id);\r\n\r\n\ttry {\r\n\t} catch (error) {}\r\n\r\n\tawait SpotifyAPI({\r\n\t\tmethod: \"put\",\r\n\t\turl: \"/v1/me/player/play\",\r\n\t\tdata: {\r\n\t\t\turis: [uri],\r\n\t\t},\r\n\t\tparams: {\r\n\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst putPlayDefault = async () => {\r\n\tawait SpotifyAPI({\r\n\t\tmethod: \"put\",\r\n\t\turl: \"/v1/me/player/play\",\r\n\t\tparams: {\r\n\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst putPause = async () => {\r\n\tawait SpotifyAPI({\r\n\t\tmethod: \"put\",\r\n\t\turl: \"/v1/me/player/pause\",\r\n\t\tparams: {\r\n\t\t\tdevice_id: window.localStorage.getItem(\"deviceId\"),\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst PlayerAPI = {\r\n\tgetDevices,\r\n\tseek,\r\n\tgetRecentlyPlayedTracks,\r\n\tpostPlayPrevious,\r\n\tpostPlayNext,\r\n\tputPlayByContext,\r\n\tputPlayByUri,\r\n\tputPlayDefault,\r\n\tputPause,\r\n};\r\n\r\nexport default PlayerAPI;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaPlayCircle,\r\n\tfaPauseCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport \"./TrackControl.sass\";\r\n\r\nconst TrackControl = ({ id, uri, handleAction, isPlaying, isActive }) => {\r\n\tconst trackControlClasses = cx({\r\n\t\t\"track-control\": true,\r\n\t\t\"track-control--active\": isActive,\r\n\t});\r\n\r\n\tconst renderIcon = () => {\r\n\t\tif (!isActive || !isPlaying) {\r\n\t\t\treturn (\r\n\t\t\t\t<FontAwesomeIcon icon={faPlayCircle} className=\"track-control__icon\" />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<FontAwesomeIcon icon={faPauseCircle} className=\"track-control__icon\" />\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<aside\r\n\t\t\tonClick={() => handleAction({ id, uri })}\r\n\t\t\tclassName={trackControlClasses}\r\n\t\t>\r\n\t\t\t{renderIcon()}\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nTrackControl.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\thandleAction: PropTypes.func.isRequired,\r\n\tisPlaying: PropTypes.bool.isRequired,\r\n\tisActive: PropTypes.bool.isRequired,\r\n};\r\n\r\nTrackControl.defaultProps = {\r\n\tid: \"\",\r\n\thandleAction: () => {},\r\n\tisPlaying: false,\r\n\tisActive: false,\r\n};\r\n\r\nexport default TrackControl;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst ArtistLinksList = ({ artists }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{artists.map(({ id, name }, index, artists) => (\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tkey={id}\r\n\t\t\t\t\tstyle={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n\t\t\t\t\tto={`/client/artist/${id}`}\r\n\t\t\t\t>{`${name}${index !== artists.length - 1 ? \", \" : \"\"}`}</NavLink>\r\n\t\t\t))}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nArtistLinksList.propTypes = {\r\n\tartists: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t})\r\n\t).isRequired,\r\n};\r\n\r\nArtistLinksList.defaultProps = {\r\n\tartists: [],\r\n};\r\n\r\nexport default ArtistLinksList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\n\r\nimport \"./TrackDescription.sass\";\r\nimport ArtistLinksList from \"components/shared/ArtistLinksList/ArtistLinksList\";\r\n\r\nconst TrackDescription = ({ title, artists, isActive }) => {\r\n\tconst trackItemClasses = cx({\r\n\t\t\"track-description\": true,\r\n\t\t\"track-description--active\": isActive,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<main className={trackItemClasses}>\r\n\t\t\t<h3 className=\"track-description__title\">{title}</h3>\r\n\t\t\t<h3 className=\"track-description__artists\">\r\n\t\t\t\t{/* TODO: ADD LINK */}\r\n\t\t\t\t<ArtistLinksList artists={artists} />\r\n\t\t\t</h3>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nTrackDescription.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tartists: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tname: PropTypes.string.isRequired,\r\n\t\t})\r\n\t).isRequired,\r\n\tisActive: PropTypes.bool,\r\n};\r\n\r\nTrackDescription.defaultProps = {\r\n\ttitle: \"No track title found.\",\r\n\tartists: [],\r\n};\r\n\r\nexport default TrackDescription;\r\n","const mapMsToDisplayForm = (duration_ms) => {\r\n\tconst date = new Date(duration_ms);\r\n\r\n\tconst minutes = date.getUTCMinutes();\r\n\r\n\tconst seconds =\r\n\t\tdate.getUTCSeconds() < 10\r\n\t\t\t? `0${date.getUTCSeconds()}`\r\n\t\t\t: date.getUTCSeconds();\r\n\r\n\treturn `${minutes}:${seconds}`;\r\n};\r\n\r\nexport default mapMsToDisplayForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport mapMsToDisplayForm from \"helpers/mapMsToDisplayForm\";\r\n\r\nimport \"./TrackDuration.sass\";\r\n\r\nconst TrackDuration = ({ duration }) => {\r\n\treturn (\r\n\t\t<aside className=\"track-duration\">{mapMsToDisplayForm(duration)}</aside>\r\n\t);\r\n};\r\n\r\nTrackDuration.propTypes = {\r\n\tduration: PropTypes.number.isRequired,\r\n};\r\n\r\nTrackDuration.defaultProps = {\r\n\tduration: 0,\r\n};\r\n\r\nexport default TrackDuration;\r\n","const getFirstImgSrc = (images = []) => {\r\n\tconst src = images[0] ? images[0].url : null;\r\n\r\n\treturn src;\r\n};\r\n\r\nexport default getFirstImgSrc;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport WebPlaybackContext from \"./web-playback-context\";\r\n\r\nconst withWebPlayback = (Base) => {\r\n\tconst WrappedComponent = (props) => {\r\n\t\tconst webPlaybackValue = useContext(WebPlaybackContext);\r\n\r\n\t\treturn <Base {...props} webPlaybackValue={webPlaybackValue} />;\r\n\t};\r\n\r\n\tWrappedComponent.displayName = \"withWebPlayback\";\r\n\r\n\treturn WrappedComponent;\r\n};\r\n\r\nexport default withWebPlayback;\r\n","import \"./TrackItem.sass\";\r\n\r\nimport Cover from \"../Cover\";\r\nimport PlayerAPI from \"services/SpotifyAPI/PlayerAPI\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport TrackControl from \"./TrackControl\";\r\nimport TrackDescription from \"./TrackDescription\";\r\nimport TrackDuration from \"./TrackDuration\";\r\nimport cx from \"classnames\";\r\nimport getFirstImgSrc from \"helpers/getFirstImgSrc\";\r\nimport withWebPlayback from \"components/providers/WebPlaybackContext/withWebPlayback\";\r\n\r\nconst TrackItem = React.forwardRef(({ track, webPlaybackValue }, ref) => {\r\n\tconst { id, name, artists, album, duration_ms, uri } = track;\r\n\tconst { isPlaying, currentTrack } = webPlaybackValue;\r\n\r\n\tconst coverSrc = getFirstImgSrc(album && album.images);\r\n\r\n\tconst currentTrackId = currentTrack ? currentTrack.id : null;\r\n\tconst isActive = currentTrackId === id;\r\n\r\n\tconst handleTrackAction = async ({ id, uri }) => {\r\n\t\tif (isActive && isPlaying) {\r\n\t\t\tawait PlayerAPI.putPause();\r\n\t\t} else {\r\n\t\t\tawait PlayerAPI.putPlayByUri({ uri });\r\n\t\t}\r\n\t};\r\n\r\n\tconst trackItemClasses = cx({\r\n\t\t\"track-item\": true,\r\n\t\t\"track-item--no-cover\": !coverSrc,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className={trackItemClasses} ref={ref}>\r\n\t\t\t<TrackControl\r\n\t\t\t\tid={id}\r\n\t\t\t\turi={uri}\r\n\t\t\t\thandleAction={handleTrackAction}\r\n\t\t\t\tisPlaying={isPlaying}\r\n\t\t\t\tisActive={isActive}\r\n\t\t\t/>\r\n\t\t\t{coverSrc && <Cover src={coverSrc} alt=\"Track cover\" />}\r\n\t\t\t<TrackDescription title={name} artists={artists} isActive={isActive} />\r\n\t\t\t<TrackDuration duration={duration_ms} />\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\nTrackItem.propTypes = {\r\n\ttrack: PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\tartists: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t).isRequired,\r\n\t\talbum: PropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\timages: PropTypes.arrayOf(\r\n\t\t\t\tPropTypes.shape({ url: PropTypes.string.isRequired })\r\n\t\t\t).isRequired,\r\n\t\t}),\r\n\t\tduration_ms: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\twebPlaybackValue: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nTrackItem.defaultProps = {\r\n\tisActive: false,\r\n};\r\n\r\nexport default withWebPlayback(TrackItem);\r\n","import ItemsSet from \"components/shared/ItemsSet\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport TrackItem from \"components/shared/TrackItem\";\r\n\r\nconst Tracks = ({ fetchTracks }) => {\r\n\treturn (\r\n\t\t<ItemsSet handleFetch={fetchTracks}>\r\n\t\t\t<ItemsSet.Content variant=\"list\">\r\n\t\t\t\t{(items, itemRef) =>\r\n\t\t\t\t\titems.map((track) => {\r\n\t\t\t\t\t\treturn <TrackItem key={track.id} track={track} ref={itemRef} />;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ItemsSet.Content>\r\n\t\t</ItemsSet>\r\n\t);\r\n};\r\n\r\nTracks.propTypes = {\r\n\tfetchTracks: PropTypes.func.isRequired,\r\n};\r\n\r\nTracks.defaultProps = {\r\n\tfetchTrack: () => {},\r\n};\r\n\r\nexport default Tracks;\r\n","import React from \"react\";\r\nimport { Redirect, useParams } from \"react-router\";\r\n\r\nconst withIdParameter = (Base) => {\r\n\tconst WrappedComponent = (props) => {\r\n\t\tconst { id } = useParams();\r\n\r\n\t\tif (!id) return <Redirect to=\"/client/not-found\" />;\r\n\r\n\t\treturn <Base {...props} id={id} />;\r\n\t};\r\n\r\n\tWrappedComponent.displayName = \"withIdParameter\";\r\n\r\n\treturn WrappedComponent;\r\n};\r\n\r\nexport default withIdParameter;\r\n","import AlbumAPI from \"services/SpotifyAPI/AlbumAPI\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Tracks from \"./Tracks\";\r\nimport withIdParameter from \"components/hoc/withIdParameter\";\r\n\r\nconst TracksContainer = ({ id }) => {\r\n\tconst fetchTracks = async ({ offset }) => {\r\n\t\tconst data = await AlbumAPI.getTracks({ id, offset });\r\n\t\tconst { items, next } = data;\r\n\r\n\t\treturn {\r\n\t\t\titems,\r\n\t\t\thasMore: Boolean(next),\r\n\t\t};\r\n\t};\r\n\r\n\treturn <Tracks fetchTracks={fetchTracks} />;\r\n};\r\n\r\nTracksContainer.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withIdParameter(TracksContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Type.sass\";\r\n\r\nconst Type = ({ children }) => {\r\n\treturn <h4 className=\"header-type\">{children}</h4>;\r\n};\r\n\r\nType.propTypes = {\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default Type;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Title.sass\";\r\n\r\nconst Title = ({ children }) => {\r\n\treturn <h1 className=\"header-title\">{children}</h1>;\r\n};\r\n\r\nTitle.propTypes = {\r\n\tchildren: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Detail.sass\";\r\n\r\nconst Detail = ({ children }) => {\r\n\treturn <footer className=\"header-detail\">{children}</footer>;\r\n};\r\n\r\nDetail.propTypes = {\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\n\r\nimport LoadingSpinner from \"../LoadingSpinner\";\r\n\r\nimport Type from \"./Type\";\r\nimport Title from \"./Title\";\r\nimport Detail from \"./Detail\";\r\nimport \"./MediaHeader.sass\";\r\n\r\nconst MediaHeader = ({ children, isLoading }) => {\r\n\tconst mediaHeaderClasses = cx({\r\n\t\t\"media-header\": true,\r\n\t\t\"media-header--loading\": isLoading,\r\n\t});\r\n\r\n\tconst renderContent = () => {\r\n\t\tif (isLoading) return <LoadingSpinner />;\r\n\r\n\t\treturn children;\r\n\t};\r\n\r\n\treturn <header className={mediaHeaderClasses}>{renderContent()}</header>;\r\n};\r\n\r\nMediaHeader.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tisLoading: PropTypes.bool,\r\n};\r\n\r\nMediaHeader.Type = Type;\r\nMediaHeader.Title = Title;\r\nMediaHeader.Detail = Detail;\r\n\r\nexport default MediaHeader;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendar } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport MediaHeader from \"components/shared/MediaHeader\";\r\nimport Cover from \"components/shared/Cover\";\r\nimport getFirstImgSrc from \"helpers/getFirstImgSrc\";\r\n\r\nconst Header = ({ isLoading, album }) => {\r\n\tconst renderContent = () => {\r\n\t\tif (isLoading) return;\r\n\r\n\t\tconsole.log(album);\r\n\t\tconst { name, type, images, release_date } = album;\r\n\t\tconst coverUrl = getFirstImgSrc(images);\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Cover src={coverUrl} />\r\n\t\t\t\t<MediaHeader.Type>{type}</MediaHeader.Type>\r\n\t\t\t\t<MediaHeader.Title>{name}</MediaHeader.Title>\r\n\t\t\t\t<MediaHeader.Detail>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCalendar} /> {release_date}\r\n\t\t\t\t</MediaHeader.Detail>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\treturn <MediaHeader isLoading={isLoading}>{renderContent()}</MediaHeader>;\r\n};\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withIdParameter from \"components/hoc/withIdParameter\";\r\n\r\nimport Header from \"./Header\";\r\nimport AlbumAPI from \"services/SpotifyAPI/AlbumAPI\";\r\n\r\nconst HeaderContainer = ({ id }) => {\r\n\tconst [album, setAlbum] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (album) return;\r\n\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t\tconst album = await AlbumAPI.getAlbum({ id });\r\n\r\n\t\t\t\tconsole.log(album);\r\n\t\t\t\tsetAlbum(album);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [id, album, isLoading]);\r\n\r\n\treturn <Header isLoading={isLoading} album={album} />;\r\n};\r\n\r\nHeaderContainer.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withIdParameter(HeaderContainer);\r\n","import React from \"react\";\r\n\r\nimport SubpageContent from \"components/shared/SubpageContent\";\r\n\r\nimport TracksContainer from \"./TracksContainer\";\r\nimport HeaderContainer from \"./HeaderContainer\";\r\n\r\nconst Album = () => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<HeaderContainer />\r\n\t\t\t<SubpageContent>\r\n\t\t\t\t<TracksContainer />\r\n\t\t\t</SubpageContent>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Album;\r\n","const { default: SpotifyAPI } = require(\"./SpotifyAPI\");\r\n\r\nconst getArtist = async ({ id }) => {\r\n\tconst { data } = await SpotifyAPI({\r\n\t\tmethod: \"get\",\r\n\t\turl: `/v1/artists/${id}`,\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nconst getTopTracks = async ({ id }) => {\r\n\tconst { data } = await SpotifyAPI({\r\n\t\turl: `/v1/artists/${id}/top-tracks`,\r\n\t\tparams: {\r\n\t\t\tcountry: \"PL\",\r\n\t\t},\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nconst getAlbums = async ({ id, offset = 0, includeGroups }) => {\r\n\tconst { data } = await SpotifyAPI({\r\n\t\turl: `/v1/artists/${id}/albums`,\r\n\t\tparams: {\r\n\t\t\toffset,\r\n\t\t\tinclude_groups: includeGroups,\r\n\t\t},\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nconst getRealatedArtists = async ({ id, offset = 0 }) => {\r\n\tconst { data } = await SpotifyAPI({\r\n\t\turl: `/v1/artists/${id}/related-artists`,\r\n\t\tparams: {\r\n\t\t\toffset,\r\n\t\t},\r\n\t});\r\n\r\n\treturn data;\r\n};\r\n\r\nconst ArtistAPI = {\r\n\tgetArtist,\r\n\tgetTopTracks,\r\n\tgetAlbums,\r\n\tgetRealatedArtists,\r\n};\r\n\r\nexport default ArtistAPI;\r\n","import Cover from \"components/shared/Cover\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport MediaHeader from \"components/shared/MediaHeader\";\r\nimport React from \"react\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport getFirstImgSrc from \"helpers/getFirstImgSrc\";\r\n\r\nconst Header = ({ isLoading, artist }) => {\r\n\tconst renderContent = () => {\r\n\t\tif (isLoading) return;\r\n\r\n\t\tconst { name, type, images, followers } = artist;\r\n\t\tconst coverUrl = getFirstImgSrc(images);\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Cover src={coverUrl} />\r\n\t\t\t\t<MediaHeader.Type>{type}</MediaHeader.Type>\r\n\t\t\t\t<MediaHeader.Title>{name}</MediaHeader.Title>\r\n\t\t\t\t<MediaHeader.Detail>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faHeart} /> {followers.total}\r\n\t\t\t\t</MediaHeader.Detail>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\treturn <MediaHeader isLoading={isLoading}>{renderContent()}</MediaHeader>;\r\n};\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport ArtistAPI from \"services/SpotifyAPI/ArtistAPI\";\r\nimport Header from \"./Header\";\r\nimport PropTypes from \"prop-types\";\r\nimport withIdParameter from \"components/hoc/withIdParameter\";\r\n\r\nconst HeaderContainer = ({ id }) => {\r\n\tconst [artist, setArtist] = useState(null);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetIsLoading(true);\r\n\t\t\t\tconst artist = await ArtistAPI.getArtist({ id });\r\n\t\t\t\tsetArtist(artist);\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [id]);\r\n\r\n\treturn <Header isLoading={isLoading} artist={artist} />;\r\n};\r\n\r\nHeaderContainer.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\nexport default withIdParameter(HeaderContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./Link.sass\";\r\n\r\nconst Link = ({ children, to }) => {\r\n\treturn (\r\n\t\t<NavLink className=\"link\" to={to}>\r\n\t\t\t{children}\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nLink.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tto: PropTypes.string.isRequired,\r\n};\r\n\r\nLink.defaultProps = {\r\n\tto: \"\",\r\n};\r\n\r\nexport default Link;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport cx from \"classnames\";\r\n\r\nimport Link from \"./Link\";\r\nimport \"./Navigation.sass\";\r\n\r\nconst Navigation = ({ children, direction }) => {\r\n\tconst navigationClasses = cx({\r\n\t\tnavigation: true,\r\n\t\t\"navigation--row\": direction === \"row\",\r\n\t\t\"navigation--column\": direction === \"column\",\r\n\t});\r\n\r\n\treturn <nav className={navigationClasses}>{children}</nav>;\r\n};\r\n\r\nNavigation.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tdirection: PropTypes.oneOf([\"row\", \"column\"]).isRequired,\r\n};\r\n\r\nNavigation.defaultProps = {\r\n\tdirection: \"column\",\r\n};\r\n\r\nNavigation.Link = Link;\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaPlayCircle,\r\n\tfaPauseCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nimport \"./Header.sass\";\r\n\r\nconst Header = ({ children, isPlaying, handleAction }) => {\r\n\tconst renderIcon = () => {\r\n\t\tif (isPlaying)\r\n\t\t\treturn (\r\n\t\t\t\t<FontAwesomeIcon className=\"card-header__icon\" icon={faPauseCircle} />\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<FontAwesomeIcon className=\"card-header__icon\" icon={faPlayCircle} />\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className=\"card-header\">\r\n\t\t\t<div onClick={handleAction} className=\"card-header__icon-wrapper\">\r\n\t\t\t\t{renderIcon()}\r\n\t\t\t</div>\r\n\t\t\t{children}\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nHeader.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tisPlaying: PropTypes.bool.isRequired,\r\n\thandleAction: PropTypes.func.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n\tisPlaying: false,\r\n\tisActive: false,\r\n\thandleAction: () => {},\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Content.sass\";\r\n\r\nconst Content = ({ children }) => {\r\n\treturn <main className=\"card-content\">{children}</main>;\r\n};\r\n\r\nContent.propTypes = {\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport cx from \"classnames\";\r\n\r\nimport \"./Title.sass\";\r\n\r\nconst Title = ({ children, to, isActive }) => {\r\n\tconst cardTitleCasses = cx({\r\n\t\t\"card-title\": true,\r\n\t\t\"card-title--active\": isActive,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<NavLink className={cardTitleCasses} to={to}>\r\n\t\t\t{children}\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nTitle.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tto: PropTypes.string.isRequired,\r\n\tisActive: PropTypes.bool.isRequired,\r\n};\r\n\r\nTitle.defaultProps = {\r\n\tto: \"\",\r\n\tisActive: false,\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Type.sass\";\r\n\r\nconst Type = ({ children }) => {\r\n\treturn <h5 className=\"card-type\">{children}</h5>;\r\n};\r\n\r\nType.propTypes = {\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default Type;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Description.sass\";\r\n\r\nconst Description = ({ children }) => {\r\n\treturn <footer className=\"card-description\">{children}</footer>;\r\n};\r\n\r\nDescription.propTypes = {\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default Description;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Header from \"./Header\";\r\nimport Content from \"./Content\";\r\nimport Title from \"./Title\";\r\nimport Type from \"./Type\";\r\nimport Description from \"./Description\";\r\nimport \"./MediaCard.sass\";\r\n\r\nconst MediaCard = React.forwardRef(({ children }, ref) => {\r\n\treturn (\r\n\t\t<article className=\"media-card\" ref={ref}>\r\n\t\t\t{children}\r\n\t\t</article>\r\n\t);\r\n});\r\n\r\nMediaCard.propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tisActive: PropTypes.bool.isRequired,\r\n\thandleAction: PropTypes.func.isRequired,\r\n\tcoverUrl: PropTypes.string,\r\n\ttitle: PropTypes.string.isRequired,\r\n\ttitleUrl: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tdescription: PropTypes.string,\r\n};\r\n\r\nMediaCard.defaultProps = {\r\n\tisActive: false,\r\n\thandleAction: () => {},\r\n\ttitle: \"Media Card\",\r\n\ttitleUrl: \"\",\r\n\ttype: \"No Type\",\r\n};\r\n\r\nMediaCard.Header = Header;\r\nMediaCard.Content = Content;\r\nMediaCard.Title = Title;\r\nMediaCard.Type = Type;\r\nMediaCard.Description = Description;\r\n\r\nexport default MediaCard;\r\n","import Cover from \"../Cover/Cover\";\r\nimport MediaCard from \"../MediaCard/MediaCard\";\r\nimport React from \"react\";\r\nimport getFirstImgSrc from \"helpers/getFirstImgSrc\";\r\n\r\nconst ArtistCard = ({\r\n\tartist,\r\n\tartistRef,\r\n\thandleAction,\r\n\tisActive,\r\n\tisPlaying,\r\n}) => {\r\n\tconst { id, name, type, images } = artist;\r\n\tconst coverUrl = getFirstImgSrc(images);\r\n\r\n\treturn (\r\n\t\t<MediaCard ref={artistRef}>\r\n\t\t\t<MediaCard.Header isPlaying={isPlaying} handleAction={handleAction}>\r\n\t\t\t\t<Cover src={coverUrl} alt=\"Artist's Photo\" />\r\n\t\t\t</MediaCard.Header>\r\n\t\t\t<MediaCard.Content>\r\n\t\t\t\t<MediaCard.Title to={`/client/artist/${id}`} isActive={isActive}>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</MediaCard.Title>\r\n\t\t\t\t<MediaCard.Type>{type}</MediaCard.Type>\r\n\t\t\t</MediaCard.Content>\r\n\t\t</MediaCard>\r\n\t);\r\n};\r\n\r\nArtistCard.propTypes = {};\r\n\r\nexport default ArtistCard;\r\n","import ArtistCard from \"./ArtistCard\";\r\nimport PlayerAPI from \"services/SpotifyAPI/PlayerAPI\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport withWebPlayback from \"components/providers/WebPlaybackContext/withWebPlayback\";\r\n\r\nconst ArtistCardContainer = ({ artist, artistRef, webPlaybackValue }) => {\r\n\tconst { uri } = artist;\r\n\tconst { isPlaying, contextUri } = webPlaybackValue;\r\n\r\n\tconst isActive = uri === contextUri;\r\n\tconst isArtistPlaying = isActive && isPlaying;\r\n\r\n\tconst handleAction = async () => {\r\n\t\tif (isArtistPlaying) {\r\n\t\t\tawait PlayerAPI.putPause();\r\n\t\t} else {\r\n\t\t\tawait PlayerAPI.putPlayByContext({ context_uri: uri });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ArtistCard\r\n\t\t\tartist={artist}\r\n\t\t\tartistRef={artistRef}\r\n\t\t\thandleAction={handleAction}\r\n\t\t\tisPlaying={isArtistPlaying}\r\n\t\t\tisActive={isActive}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nArtistCardContainer.propTypes = {\r\n\tartist: PropTypes.shape().isRequired,\r\n\tartistRef: PropTypes.func.isRequired,\r\n};\r\n\r\nArtistCardContainer.defaultProps = {\r\n\tartistRef: () => {},\r\n};\r\n\r\nexport default withWebPlayback(ArtistCardContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ItemsSet from \"components/shared/ItemsSet\";\r\nimport ArtistCardContainer from \"components/shared/ArtistCardContainer\";\r\n\r\nconst InfiniteArtistsSet = ({ title, fetchArtists }) => {\r\n\tconst renderArtistsCardsGrid = (artists, itemRef) => {\r\n\t\treturn artists.map((artist) => (\r\n\t\t\t<ArtistCardContainer\r\n\t\t\t\tkey={artist.id}\r\n\t\t\t\tartist={artist}\r\n\t\t\t\tartistRef={itemRef}\r\n\t\t\t/>\r\n\t\t));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ItemsSet handleFetch={fetchArtists}>\r\n\t\t\t<ItemsSet.Header>{title}</ItemsSet.Header>\r\n\t\t\t<ItemsSet.Content variant=\"grid\">\r\n\t\t\t\t{renderArtistsCardsGrid}\r\n\t\t\t</ItemsSet.Content>\r\n\t\t</ItemsSet>\r\n\t);\r\n};\r\n\r\nInfiniteArtistsSet.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tfetchArtists: PropTypes.func.isRequired,\r\n};\r\n\r\nInfiniteArtistsSet.defaultProps = {\r\n\ttitle: \"Artists\",\r\n\tfetchArtists: () => {},\r\n};\r\n\r\nexport default InfiniteArtistsSet;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport ArtistAPI from \"services/SpotifyAPI/ArtistAPI\";\r\nimport InfiniteArtistsSet from \"components/shared/InfiniteArtistsSet/InfiniteArtistsSet\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RelatedArtists = ({ id }) => {\r\n\tconst fetchRelatedArtists = useCallback(\r\n\t\tasync ({ offset }) => {\r\n\t\t\tconsole.log(\"fetchRelatedArtists\");\r\n\t\t\tconst data = await ArtistAPI.getRealatedArtists({ id, offset });\r\n\t\t\tconst { artists } = data;\r\n\r\n\t\t\treturn {\r\n\t\t\t\titems: artists,\r\n\t\t\t\thasMore: false,\r\n\t\t\t};\r\n\t\t},\r\n\t\t[id]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<InfiniteArtistsSet\r\n\t\t\tfetchArtists={fetchRelatedArtists}\r\n\t\t\ttitle=\"Related Artists\"\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nRelatedArtists.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RelatedArtists;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport getFirstImgSrc from \"helpers/getFirstImgSrc\";\r\nimport MediaCard from \"components/shared/MediaCard\";\r\nimport ArtistLinksList from \"components/shared/ArtistLinksList\";\r\nimport Cover from \"components/shared/Cover\";\r\n\r\nconst AlbumCard = ({ album, albumRef, handleAction, isActive, isPlaying }) => {\r\n\tconst { id, name, type, images, artists } = album;\r\n\tconst coverUrl = getFirstImgSrc(images);\r\n\r\n\treturn (\r\n\t\t<MediaCard ref={albumRef}>\r\n\t\t\t<MediaCard.Header isPlaying={isPlaying} handleAction={handleAction}>\r\n\t\t\t\t<Cover src={coverUrl} alt=\"Albums's Cover\" />\r\n\t\t\t</MediaCard.Header>\r\n\t\t\t<MediaCard.Content>\r\n\t\t\t\t<MediaCard.Title to={`/client/album/${id}`} isActive={isActive}>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</MediaCard.Title>\r\n\t\t\t\t<MediaCard.Type>{type}</MediaCard.Type>\r\n\t\t\t\t<MediaCard.Description>\r\n\t\t\t\t\t<ArtistLinksList artists={artists} />\r\n\t\t\t\t</MediaCard.Description>\r\n\t\t\t</MediaCard.Content>\r\n\t\t</MediaCard>\r\n\t);\r\n};\r\n\r\nAlbumCard.propTypes = {\r\n\talbum: PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\timages: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\turl: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t).isRequired,\r\n\t\tartists: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t).isRequired,\r\n\t}).isRequired,\r\n\talbumRef: PropTypes.func.isRequired,\r\n\thandleAction: PropTypes.func.isRequired,\r\n\tisActive: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AlbumCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport withWebPlayback from \"components/providers/WebPlaybackContext/withWebPlayback\";\r\nimport AlbumCard from \"./AlbumCard/AlbumCard\";\r\nimport PlayerAPI from \"services/SpotifyAPI/PlayerAPI\";\r\n\r\nconst AlbumCardContainer = ({ album, albumRef, webPlaybackValue }) => {\r\n\tconst { uri } = album;\r\n\tconst { isPlaying, contextUri } = webPlaybackValue;\r\n\r\n\tconst isActive = uri === contextUri;\r\n\tconst isAlbumPlaying = isActive && isPlaying;\r\n\r\n\tconst handleAction = async () => {\r\n\t\tif (isAlbumPlaying) {\r\n\t\t\tawait PlayerAPI.putPause();\r\n\t\t} else {\r\n\t\t\tawait PlayerAPI.putPlayByContext({ context_uri: uri });\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<AlbumCard\r\n\t\t\talbum={album}\r\n\t\t\talbumRef={albumRef}\r\n\t\t\thandleAction={handleAction}\r\n\t\t\tisPlaying={isAlbumPlaying}\r\n\t\t\tisActive={isActive}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nAlbumCardContainer.propTypes = {\r\n\talbum: PropTypes.shape({\r\n\t\tid: PropTypes.string.isRequired,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\ttype: PropTypes.string.isRequired,\r\n\t\timages: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\turl: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t).isRequired,\r\n\t\tartists: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t).isRequired,\r\n\t\turi: PropTypes.string.isRequired,\r\n\t}).isRequired,\r\n\talbumRef: PropTypes.func.isRequired,\r\n\t// TODO: ADD TYPES\r\n\twebPlaybackValue: PropTypes.shape({}).isRequired,\r\n};\r\n\r\nexport default withWebPlayback(AlbumCardContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ItemsSet from \"components/shared/ItemsSet\";\r\nimport AlbumCardContainer from \"../AlbumCardContainer\";\r\n\r\nconst InfiniteAlbumsSet = ({ title, fetchAlbums }) => {\r\n\tconst renderAlbumCardsGrid = (albums, itemRef) => {\r\n\t\treturn albums.map((album) => (\r\n\t\t\t<AlbumCardContainer key={album.id} album={album} albumRef={itemRef} />\r\n\t\t));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ItemsSet handleFetch={fetchAlbums}>\r\n\t\t\t<ItemsSet.Header>{title}</ItemsSet.Header>\r\n\t\t\t<ItemsSet.Content variant=\"grid\">{renderAlbumCardsGrid}</ItemsSet.Content>\r\n\t\t</ItemsSet>\r\n\t);\r\n};\r\n\r\nInfiniteAlbumsSet.propTypes = {\r\n\ttitle: PropTypes.string.isRequired,\r\n\tfetchAlbums: PropTypes.func.isRequired,\r\n};\r\n\r\nInfiniteAlbumsSet.defaultProps = {\r\n\ttitle: \"Albums\",\r\n\tfetchAlbums: () => {},\r\n};\r\n\r\nexport default InfiniteAlbumsSet;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport ArtistAPI from \"services/SpotifyAPI/ArtistAPI\";\r\nimport InfiniteAlbumsSet from \"components/shared/InfiniteAlbumsSet\";\r\nimport ItemsSet from \"components/shared/ItemsSet\";\r\nimport PropTypes from \"prop-types\";\r\nimport TrackItem from \"components/shared/TrackItem\";\r\n\r\nconst Review = ({ id }) => {\r\n\tconst fetchTopTrack = useCallback(async () => {\r\n\t\tconst { tracks } = await ArtistAPI.getTopTracks({ id });\r\n\r\n\t\treturn {\r\n\t\t\titems: tracks,\r\n\t\t\thasMore: false,\r\n\t\t};\r\n\t}, [id]);\r\n\r\n\tconst fetchAlbums = useCallback(\r\n\t\tasync ({ offset }) => {\r\n\t\t\tconst data = await ArtistAPI.getAlbums({\r\n\t\t\t\tid,\r\n\t\t\t\toffset,\r\n\t\t\t\tincludeGroups: \"album\",\r\n\t\t\t});\r\n\t\t\tconst { items, next } = data;\r\n\t\t\treturn {\r\n\t\t\t\titems,\r\n\t\t\t\thasMore: Boolean(next),\r\n\t\t\t};\r\n\t\t},\r\n\t\t[id]\r\n\t);\r\n\r\n\tconst renderTracksList = (tracks) => {\r\n\t\treturn tracks.map((track) => <TrackItem key={track.id} track={track} />);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ItemsSet handleFetch={fetchTopTrack}>\r\n\t\t\t\t<ItemsSet.Header>Top tracks</ItemsSet.Header>\r\n\t\t\t\t<ItemsSet.Content variant=\"list\">{renderTracksList}</ItemsSet.Content>\r\n\t\t\t</ItemsSet>\r\n\t\t\t<InfiniteAlbumsSet title=\"Albums\" fetchAlbums={fetchAlbums} />\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nReview.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Review;\r\n","import { Redirect, Route, Switch } from \"react-router\";\r\n\r\nimport HeaderContainer from \"./HeaderContainer\";\r\nimport Navigation from \"components/shared/Navigation\";\r\nimport React from \"react\";\r\nimport RelatedArtists from \"./HeaderContainer/RelatedArtists\";\r\nimport Review from \"./Review\";\r\nimport SubpageContent from \"components/shared/SubpageContent\";\r\nimport withIdParameter from \"components/hoc/withIdParameter\";\r\n\r\nconst Artist = ({ id }) => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<HeaderContainer />\r\n\t\t\t<SubpageContent>\r\n\t\t\t\t<Navigation direction=\"row\">\r\n\t\t\t\t\t<Navigation.Link to={`/client/artist/${id}/review`}>\r\n\t\t\t\t\t\tReview\r\n\t\t\t\t\t</Navigation.Link>\r\n\t\t\t\t\t<Navigation.Link to={`/client/artist/${id}/related-artists`}>\r\n\t\t\t\t\t\tRelated Artists\r\n\t\t\t\t\t</Navigation.Link>\r\n\t\t\t\t</Navigation>\r\n\t\t\t\t<Switch key={id}>\r\n\t\t\t\t\t<Route path={`/client/artist/${id}/review`}>\r\n\t\t\t\t\t\t<Review id={id} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path={`/client/artist/${id}/related-artists`}>\r\n\t\t\t\t\t\t<RelatedArtists id={id} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route>\r\n\t\t\t\t\t\t<Redirect to={`/client/artist/${id}/review`} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</SubpageContent>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default withIdParameter(Artist);\r\n","import \"./ClientHeader.sass\";\r\n\r\nimport { Route, withRouter } from \"react-router\";\r\n\r\nimport Navigation from \"components/shared/Navigation\";\r\nimport React from \"react\";\r\nimport SpotifyAuth from \"services/SpotifyAuth\";\r\n\r\nconst ClientHeader = ({ history }) => {\r\n\tconst handleLogOut = () => {\r\n\t\tSpotifyAuth.logOut();\r\n\t\thistory.push(\"/auth\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<header className=\"client-header\">\r\n\t\t\t<Route path=\"/client/library\">\r\n\t\t\t\t<Navigation direction=\"row\">\r\n\t\t\t\t\t<Navigation.Link to=\"/client/library/artists\">\r\n\t\t\t\t\t\tArtists\r\n\t\t\t\t\t</Navigation.Link>\r\n\t\t\t\t\t<Navigation.Link to=\"/client/library/albums\">Albums</Navigation.Link>\r\n\t\t\t\t</Navigation>\r\n\t\t\t</Route>\r\n\t\t\t<div className=\"log-out-wrapper\">\r\n\t\t\t\t<button className=\"log-out-wrapper__btn\" onClick={handleLogOut}>\r\n\t\t\t\t\tLog Out\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default withRouter(ClientHeader);\r\n","import React from \"react\";\r\n\r\nimport Navigation from \"components/shared/Navigation\";\r\n\r\nimport \"./ClientSidebar.sass\";\r\n\r\nconst ClientSidebar = () => {\r\n\treturn (\r\n\t\t<aside className=\"client-sidebar\">\r\n\t\t\t<Navigation direction=\"column\">\r\n\t\t\t\t<Navigation.Link to=\"/client/home\">Home</Navigation.Link>\r\n\t\t\t\t<Navigation.Link to=\"/client/library\">Library</Navigation.Link>\r\n\t\t\t</Navigation>\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nexport default ClientSidebar;\r\n","import InfiniteArtistsSet from \"components/shared/InfiniteArtistsSet/InfiniteArtistsSet\";\r\nimport ItemsSet from \"components/shared/ItemsSet\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport SubpageContent from \"components/shared/SubpageContent\";\r\nimport TrackItem from \"components/shared/TrackItem\";\r\n\r\nconst Home = ({ fetchRecentlyPlayed, fetchTopArtists }) => {\r\n\tconst renderTracksList = (tracks) => {\r\n\t\treturn tracks.map((track) => <TrackItem key={track.id} track={track} />);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<SubpageContent>\r\n\t\t\t<ItemsSet handleFetch={fetchRecentlyPlayed}>\r\n\t\t\t\t<ItemsSet.Header>Recently Played</ItemsSet.Header>\r\n\t\t\t\t<ItemsSet.Content variant=\"list\">{renderTracksList}</ItemsSet.Content>\r\n\t\t\t</ItemsSet>\r\n\t\t\t<InfiniteArtistsSet title=\"Top Artists\" fetchArtists={fetchTopArtists} />\r\n\t\t</SubpageContent>\r\n\t);\r\n};\r\n\r\nHome.propTypes = {\r\n\tfetchRecentlyPlayed: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import SpotifyAPI from \"./SpotifyAPI\";\r\n\r\nconst getTopArtists = async ({ offset = 0 }) => {\r\n\treturn await SpotifyAPI({\r\n\t\turl: \"/v1/me/top/artists\",\r\n\t\tparams: {\r\n\t\t\toffset,\r\n\t\t},\r\n\t}).then((res) => res.data);\r\n};\r\n\r\nconst PersonalizationAPI = {\r\n\tgetTopArtists,\r\n};\r\n\r\nexport default PersonalizationAPI;\r\n","import Home from \"./Home\";\r\nimport PersonalizationAPI from \"services/SpotifyAPI/PersonalizationAPI\";\r\nimport PlayerAPI from \"services/SpotifyAPI/PlayerAPI\";\r\nimport React from \"react\";\r\n\r\nconst HomeContainer = (props) => {\r\n\tconst fetchRecentlyPlayed = async () => {\r\n\t\tconst data = await PlayerAPI.getRecentlyPlayedTracks({\r\n\t\t\tlimit: 5,\r\n\t\t});\r\n\t\tconst { items: fetchedItems } = data;\r\n\r\n\t\treturn {\r\n\t\t\titems: fetchedItems.map((pagingTrack) => pagingTrack.track),\r\n\t\t\thasMore: false,\r\n\t\t};\r\n\t};\r\n\r\n\tconst fetchTopArtists = async ({ offset }) => {\r\n\t\tconst data = await PersonalizationAPI.getTopArtists({\r\n\t\t\toffset,\r\n\t\t});\r\n\t\tconst { items, next } = data;\r\n\r\n\t\treturn {\r\n\t\t\titems,\r\n\t\t\thasMore: Boolean(next),\r\n\t\t};\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Home\r\n\t\t\tfetchRecentlyPlayed={fetchRecentlyPlayed}\r\n\t\t\tfetchTopArtists={fetchTopArtists}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nHomeContainer.propTypes = {};\r\n\r\nexport default HomeContainer;\r\n","import SpotifyAPI from \"./SpotifyAPI\";\r\n\r\nconst getSavedAlbums = async ({ offset }) => {\r\n\treturn await SpotifyAPI({\r\n\t\turl: \"/v1/me/albums\",\r\n\t\tparams: {\r\n\t\t\toffset,\r\n\t\t},\r\n\t}).then((res) => res.data);\r\n};\r\n\r\nconst LibraryAPI = {\r\n\tgetSavedAlbums,\r\n};\r\n\r\nexport default LibraryAPI;\r\n","import { Redirect, Route, Switch } from \"react-router\";\r\n\r\nimport InfiniteAlbumsSet from \"components/shared/InfiniteAlbumsSet\";\r\nimport InfiniteArtistsSet from \"components/shared/InfiniteArtistsSet\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport SubpageContent from \"components/shared/SubpageContent\";\r\n\r\nconst Library = ({ fetchFollowedArtists, fetchSavedAlbums }) => {\r\n\treturn (\r\n\t\t<SubpageContent>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/client/library/artists\">\r\n\t\t\t\t\t<InfiniteArtistsSet fetchArtists={fetchFollowedArtists} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/client/library/albums\">\r\n\t\t\t\t\t<InfiniteAlbumsSet fetchAlbums={fetchSavedAlbums} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route>\r\n\t\t\t\t\t<Redirect to=\"/client/library/artists\" />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</SubpageContent>\r\n\t);\r\n};\r\n\r\nLibrary.propTypes = {\r\n\tfetchFollowedArtists: PropTypes.func.isRequired,\r\n\tfetchSavedAlbums: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Library;\r\n","import SpotifyAPI from \"./SpotifyAPI\";\r\n\r\nconst getFollowedArtists = async ({ after }) => {\r\n\treturn await SpotifyAPI({\r\n\t\turl: \"/v1/me/following\",\r\n\t\tparams: {\r\n\t\t\ttype: \"artist\",\r\n\t\t\tafter,\r\n\t\t},\r\n\t}).then((res) => res.data);\r\n};\r\n\r\nconst FollowAPI = {\r\n\tgetFollowedArtists,\r\n};\r\n\r\nexport default FollowAPI;\r\n","import React from \"react\";\r\n\r\nimport LibraryAPI from \"services/SpotifyAPI/LibraryAPI\";\r\n\r\nimport Library from \"./Library\";\r\nimport FollowAPI from \"services/SpotifyAPI/FollowAPI\";\r\n\r\nconst LibraryContainer = (props) => {\r\n\tconst fetchFollowedArtists = async ({ lastItem }) => {\r\n\t\tconst data = await FollowAPI.getFollowedArtists({\r\n\t\t\tafter: lastItem ? lastItem.id : null,\r\n\t\t});\r\n\t\tconst { items, next } = data.artists;\r\n\t\treturn {\r\n\t\t\titems,\r\n\t\t\thasMore: Boolean(next),\r\n\t\t};\r\n\t};\r\n\r\n\tconst fetchSavedAlbums = async ({ offset }) => {\r\n\t\tconst data = await LibraryAPI.getSavedAlbums({ offset });\r\n\t\tconst { items: fetchedItems, next } = data;\r\n\t\treturn {\r\n\t\t\titems: fetchedItems.map((pagingTrack) => pagingTrack.album),\r\n\t\t\thasMore: Boolean(next),\r\n\t\t};\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Library\r\n\t\t\tfetchFollowedArtists={fetchFollowedArtists}\r\n\t\t\tfetchSavedAlbums={fetchSavedAlbums}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nLibraryContainer.propTypes = {};\r\n\r\nexport default LibraryContainer;\r\n","import \"./MusicControl.sass\";\r\n\r\nimport {\r\n\tfaPauseCircle,\r\n\tfaPlayCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {\r\n\tfaStepBackward,\r\n\tfaStepForward,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport mapMsToDisplayForm from \"helpers/mapMsToDisplayForm\";\r\n\r\nconst MusicControl = ({\r\n\tisPlaying,\r\n\tposition,\r\n\tduration,\r\n\thandlePlayPrevious,\r\n\thandleAction,\r\n\thandleSeek,\r\n\thandlePlayNext,\r\n}) => {\r\n\treturn (\r\n\t\t<main className=\"music-control\">\r\n\t\t\t<div className=\"action-buttons\">\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tclassName=\"action-buttons__aside-icon\"\r\n\t\t\t\t\ticon={faStepBackward}\r\n\t\t\t\t\tonClick={handlePlayPrevious}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tclassName=\"action-buttons__main-icon\"\r\n\t\t\t\t\ticon={isPlaying ? faPauseCircle : faPlayCircle}\r\n\t\t\t\t\tonClick={handleAction}\r\n\t\t\t\t/>\r\n\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\tclassName=\"action-buttons__aside-icon\"\r\n\t\t\t\t\ticon={faStepForward}\r\n\t\t\t\t\tonClick={handlePlayNext}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"progress-bar-wrapper\">\r\n\t\t\t\t<p className=\"progress-bar-wrapper__duration\">\r\n\t\t\t\t\t{mapMsToDisplayForm(position)}\r\n\t\t\t\t</p>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"progress-bar-wrapper__bar\"\r\n\t\t\t\t\tonDragEnd={handleSeek}\r\n\t\t\t\t\ttype=\"range\"\r\n\t\t\t\t\tvalue={position}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tmin={0}\r\n\t\t\t\t\tmax={duration}\r\n\t\t\t\t/>\r\n\t\t\t\t<p className=\"progress-bar-wrapper__duration\">\r\n\t\t\t\t\t{mapMsToDisplayForm(duration)}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nMusicControl.propTypes = {\r\n\tisPlaying: PropTypes.bool.isRequired,\r\n\thandlePlayPrevious: PropTypes.func.isRequired,\r\n\thandleAction: PropTypes.func.isRequired,\r\n\thandlePlayNext: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MusicControl;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport MusicControl from \"./MusicControl\";\r\nimport PlayerAPI from \"services/SpotifyAPI/PlayerAPI\";\r\nimport PropTypes from \"prop-types\";\r\nimport withWebPlayback from \"components/providers/WebPlaybackContext/withWebPlayback\";\r\n\r\nconst MusicControlContainer = ({ webPlaybackValue }) => {\r\n\tconst { isPlaying, isReady, duration, position } = webPlaybackValue;\r\n\tconst [currentPosition, setCurrentPosition] = useState(position);\r\n\r\n\tconst handleAction = async () => {\r\n\t\tif (!isReady) return;\r\n\r\n\t\tif (isPlaying) {\r\n\t\t\tawait PlayerAPI.putPause();\r\n\t\t} else {\r\n\t\t\tawait PlayerAPI.putPlayDefault();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSeek = async (e) => {\r\n\t\tconst newPosition = e.target.value;\r\n\r\n\t\tawait PlayerAPI.seek({ position: newPosition });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentPosition(position);\r\n\t}, [position]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet interval = null;\r\n\r\n\t\tif (isPlaying) {\r\n\t\t\tinterval = setInterval(() => {\r\n\t\t\t\tsetCurrentPosition((currentPosition) => currentPosition + 1000);\r\n\t\t\t}, 1000);\r\n\t\t} else if (!isPlaying && currentPosition !== 0) {\r\n\t\t\tclearInterval(interval);\r\n\t\t}\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [isPlaying, currentPosition]);\r\n\r\n\treturn (\r\n\t\t<MusicControl\r\n\t\t\tposition={currentPosition}\r\n\t\t\tduration={duration}\r\n\t\t\tisPlaying={isPlaying && isReady}\r\n\t\t\thandleAction={handleAction}\r\n\t\t\thandleSeek={handleSeek}\r\n\t\t\thandlePlayPrevious={PlayerAPI.postPlayPrevious}\r\n\t\t\thandlePlayNext={PlayerAPI.postPlayNext}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nMusicControlContainer.propTypes = {\r\n\twebPlaybackValue: PropTypes.shape({\r\n\t\tisPlaying: PropTypes.bool.isRequired,\r\n\t\tisReady: PropTypes.bool.isRequired,\r\n\t\tduration: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n};\r\n\r\nexport default withWebPlayback(MusicControlContainer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TrackInfo.sass\";\r\nimport getFirstImgSrc from \"helpers/getFirstImgSrc\";\r\n\r\nconst TrackInfo = ({ currentTrack }) => {\r\n\tconst { album, artists, name } = currentTrack;\r\n\tconst coverSrc = getFirstImgSrc(album.images);\r\n\r\n\treturn (\r\n\t\t<aside className=\"track-info\">\r\n\t\t\t<img\r\n\t\t\t\tclassName=\"track-info__cover\"\r\n\t\t\t\tsrc={coverSrc}\r\n\t\t\t\talt=\"Current track cover\"\r\n\t\t\t/>\r\n\t\t\t<main className=\"track-details\">\r\n\t\t\t\t<h5 className=\"track-details__name\">{name}</h5>\r\n\t\t\t\t<footer className=\"track-details__artists\">\r\n\t\t\t\t\t{artists.map((artist) => artist.name).join(\", \")}\r\n\t\t\t\t</footer>\r\n\t\t\t</main>\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nTrackInfo.propTypes = {\r\n\tcurrentTrack: PropTypes.shape({\r\n\t\talbum: PropTypes.shape({\r\n\t\t\timages: PropTypes.arrayOf(\r\n\t\t\t\tPropTypes.shape({ url: PropTypes.string.isRequired })\r\n\t\t\t).isRequired,\r\n\t\t}).isRequired,\r\n\t\tartists: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tname: PropTypes.string.isRequired,\r\n\t\t\t})\r\n\t\t).isRequired,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t}).isRequired,\r\n};\r\n\r\nexport default TrackInfo;\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\n\r\nimport LoadingSpinner from \"components/shared/LoadingSpinner\";\r\nimport MusicControlContainer from \"./MusicControlContainer\";\r\n\r\nimport TrackInfo from \"./TrackInfo\";\r\nimport \"./Player.sass\";\r\n\r\nconst Player = ({ isReady, currentTrack }) => {\r\n\tconst playerClasses = cx({\r\n\t\tplayer: true,\r\n\t\t\"player--loading\": !isReady,\r\n\t});\r\n\r\n\tconst renderContent = () => {\r\n\t\tif (!isReady) return <LoadingSpinner />;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{currentTrack && <TrackInfo currentTrack={currentTrack} />}\r\n\t\t\t\t<MusicControlContainer />\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t};\r\n\r\n\treturn <footer className={playerClasses}>{renderContent()}</footer>;\r\n};\r\n\r\nPlayer.propTypes = {};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\nimport Player from \"./Player\";\r\nimport withWebPlayback from \"components/providers/WebPlaybackContext/withWebPlayback\";\r\n\r\nconst PlayerContainer = ({ webPlaybackValue }) => {\r\n\tconst { isReady, currentTrack } = webPlaybackValue;\r\n\r\n\treturn <Player isReady={isReady} currentTrack={currentTrack} />;\r\n};\r\n\r\nPlayerContainer.propTypes = {};\r\n\r\nexport default withWebPlayback(PlayerContainer);\r\n","import \"./Client.sass\";\r\n\r\nimport { Redirect, Route, Switch } from \"react-router\";\r\n\r\nimport Album from \"./pages/Album\";\r\nimport Artist from \"./pages/Artist\";\r\nimport ClientHeader from \"./ClientHeader\";\r\nimport ClientSidebar from \"./ClientSidebar\";\r\nimport HomeContainer from \"./pages/HomeContainer\";\r\nimport LibraryContainer from \"./pages/LibraryContainer\";\r\nimport PlayerContainer from \"./PlayerContainer\";\r\nimport React from \"react\";\r\n\r\nconst Client = () => {\r\n\treturn (\r\n\t\t<div className=\"client\">\r\n\t\t\t<ClientHeader />\r\n\t\t\t<ClientSidebar />\r\n\t\t\t<main className=\"client__content\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/client/home\" component={HomeContainer} />\r\n\t\t\t\t\t<Route path=\"/client/library\" component={LibraryContainer} />\r\n\t\t\t\t\t<Route path=\"/client/album/:id\" component={Album} />\r\n\t\t\t\t\t<Route path=\"/client/artist/:id\" component={Artist} />\r\n\t\t\t\t\t<Route>\r\n\t\t\t\t\t\t<Redirect to=\"/client/home\" />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</main>\r\n\t\t\t<PlayerContainer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Client;\r\n","import React from \"react\";\r\n\r\nimport withAuthValidation from \"components/hoc/withAuthValidation\";\r\nimport WebPlaybackProvider from \"components/providers/WebPlaybackContext/WebPlaybackProvider\";\r\n\r\nimport Client from \"./Client\";\r\n\r\nconst ClientContainer = (props) => {\r\n\treturn (\r\n\t\t<WebPlaybackProvider>\r\n\t\t\t<Client />\r\n\t\t</WebPlaybackProvider>\r\n\t);\r\n};\r\n\r\nClientContainer.propTypes = {};\r\n\r\nexport default withAuthValidation(ClientContainer);\r\n","import \"./App.sass\";\n\nimport { Redirect, Route, Switch } from \"react-router\";\n\nimport AuthContainer from \"./AuthContainer\";\nimport CallbackContainer from \"./CallbackContainer\";\nimport ClientContainer from \"./ClientContainer\";\nimport React from \"react\";\n\nconst App = (props) => {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/auth\" component={AuthContainer} />\n\t\t\t\t<Route path=\"/callback\" component={CallbackContainer} />\n\t\t\t\t<Route path=\"/client\" component={ClientContainer} />\n\t\t\t\t<Route>\n\t\t\t\t\t<Redirect to=\"/client\" />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"components/App\";\nimport \"assets/styles/_root.sass\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}